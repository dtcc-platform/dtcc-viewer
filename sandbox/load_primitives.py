import numpy as np
import trimesh
from dtcc_model import Mesh
from dtcc_io import meshes
from dtcc_viewer.utils import get_sub_mesh


def get_quad(size, tex_min, tex_max):
    debug_vertices = [
        -size,
        -size,
        0,
        tex_min,
        tex_min,
        size,
        -size,
        0,
        tex_max,
        tex_min,
        -size,
        size,
        0,
        tex_min,
        tex_max,
        size,
        -size,
        0,
        tex_max,
        tex_min,
        -size,
        size,
        0,
        tex_min,
        tex_max,
        size,
        size,
        0,
        tex_max,
        tex_max,
    ]

    debug_indices = [
        0,
        1,
        2,
        3,
        4,
        5,
    ]

    return debug_vertices, debug_indices


def get_plane(floor_size, floor_z):
    floor_vertices = [
        -floor_size,
        -floor_size,
        floor_z,
        1,
        1,
        1,
        0,
        0,
        1,
        floor_size,
        -floor_size,
        floor_z,
        1,
        1,
        1,
        0,
        0,
        1,
        -floor_size,
        floor_size,
        floor_z,
        1,
        1,
        1,
        0,
        0,
        1,
        floor_size,
        -floor_size,
        floor_z,
        1,
        1,
        1,
        0,
        0,
        1,
        -floor_size,
        floor_size,
        floor_z,
        1,
        1,
        1,
        0,
        0,
        1,
        floor_size,
        floor_size,
        floor_z,
        1,
        1,
        1,
        0,
        0,
        1,
    ]

    floor_indices = [
        0,
        1,
        2,
        3,
        4,
        5,
    ]

    return floor_vertices, floor_indices


def get_cube():
    cube_vertices = [
        -0.5,
        0.5,
        -0.5,
        0.9960784314,
        0.7764705882,
        0,
        0,
        0,
        -1,
        -0.5,
        -0.5,
        -0.5,
        1,
        0.1490196078,
        0,
        0,
        0,
        -1,
        0.5,
        -0.5,
        -0.5,
        0.9960784314,
        0.7764705882,
        0,
        0,
        0,
        -1,
        -0.5,
        0.5,
        -0.5,
        0.9960784314,
        0.7764705882,
        0,
        0,
        0,
        -1,
        0.5,
        -0.5,
        -0.5,
        0.9960784314,
        0.7764705882,
        0,
        0,
        0,
        -1,
        0.5,
        0.5,
        -0.5,
        0.7450980392,
        0.9882352941,
        0,
        0,
        0,
        -1,
        -0.5,
        0.5,
        0.5,
        0.7450980392,
        0.9882352941,
        0,
        0,
        0,
        1,
        0.5,
        0.5,
        0.5,
        0,
        1,
        0,
        0,
        0,
        1,
        0.5,
        -0.5,
        0.5,
        0.7450980392,
        0.9882352941,
        0,
        0,
        0,
        1,
        -0.5,
        0.5,
        0.5,
        0.7450980392,
        0.9882352941,
        0,
        0,
        0,
        1,
        0.5,
        -0.5,
        0.5,
        0.7450980392,
        0.9882352941,
        0,
        0,
        0,
        1,
        -0.5,
        -0.5,
        0.5,
        0.9960784314,
        0.7764705882,
        0,
        0,
        0,
        1,
        -0.5,
        0.5,
        0.5,
        0.7450980392,
        0.9882352941,
        0,
        -1,
        0,
        0,
        -0.5,
        -0.5,
        0.5,
        0.9960784314,
        0.7764705882,
        0,
        -1,
        0,
        0,
        -0.5,
        -0.5,
        -0.5,
        1,
        0.1490196078,
        0,
        -1,
        0,
        0,
        -0.5,
        0.5,
        0.5,
        0.7450980392,
        0.9882352941,
        0,
        -1,
        0,
        0,
        -0.5,
        -0.5,
        -0.5,
        1,
        0.1490196078,
        0,
        -1,
        0,
        0,
        -0.5,
        0.5,
        -0.5,
        0.9960784314,
        0.7764705882,
        0,
        -1,
        0,
        0,
        0.5,
        0.5,
        0.5,
        0,
        1,
        0,
        0,
        1,
        0,
        -0.5,
        0.5,
        0.5,
        0.7450980392,
        0.9882352941,
        0,
        0,
        1,
        0,
        -0.5,
        0.5,
        -0.5,
        0.9960784314,
        0.7764705882,
        0,
        0,
        1,
        0,
        0.5,
        0.5,
        0.5,
        0,
        1,
        0,
        0,
        1,
        0,
        -0.5,
        0.5,
        -0.5,
        0.9960784314,
        0.7764705882,
        0,
        0,
        1,
        0,
        0.5,
        0.5,
        -0.5,
        0.7450980392,
        0.9882352941,
        0,
        0,
        1,
        0,
        0.5,
        -0.5,
        0.5,
        0.7450980392,
        0.9882352941,
        0,
        1,
        0,
        0,
        0.5,
        0.5,
        0.5,
        0,
        1,
        0,
        1,
        0,
        0,
        0.5,
        0.5,
        -0.5,
        0.7450980392,
        0.9882352941,
        0,
        1,
        0,
        0,
        0.5,
        -0.5,
        0.5,
        0.7450980392,
        0.9882352941,
        0,
        1,
        0,
        0,
        0.5,
        0.5,
        -0.5,
        0.7450980392,
        0.9882352941,
        0,
        1,
        0,
        0,
        0.5,
        -0.5,
        -0.5,
        0.9960784314,
        0.7764705882,
        0,
        1,
        0,
        0,
        -0.5,
        -0.5,
        0.5,
        0.9960784314,
        0.7764705882,
        0,
        0,
        -1,
        0,
        0.5,
        -0.5,
        0.5,
        0.7450980392,
        0.9882352941,
        0,
        0,
        -1,
        0,
        0.5,
        -0.5,
        -0.5,
        0.9960784314,
        0.7764705882,
        0,
        0,
        -1,
        0,
        -0.5,
        -0.5,
        0.5,
        0.9960784314,
        0.7764705882,
        0,
        0,
        -1,
        0,
        0.5,
        -0.5,
        -0.5,
        0.9960784314,
        0.7764705882,
        0,
        0,
        -1,
        0,
        -0.5,
        -0.5,
        -0.5,
        1,
        0.1490196078,
        0,
        0,
        -1,
        0,
    ]

    cube_indices = [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
    ]

    return cube_vertices, cube_indices


def get_icosahedron(center, radius):
    icosa_vertices = [
        0,
        0,
        0.3000000119,
        1,
        1,
        1,
        0.4911234949,
        0.3568220761,
        0.794654465,
        0.26832816,
        0,
        0.13416408,
        1,
        1,
        1,
        0.4911234949,
        0.3568220761,
        0.794654465,
        0.0829179659,
        0.25519526,
        0.13416408,
        1,
        1,
        1,
        0.4911234949,
        0.3568220761,
        0.794654465,
        0,
        0,
        0.3000000119,
        1,
        1,
        1,
        -0.1875924851,
        0.5773502685,
        0.7946544702,
        0.0829179659,
        0.25519526,
        0.13416408,
        1,
        1,
        1,
        -0.1875924851,
        0.5773502685,
        0.7946544702,
        -0.2170820385,
        0.1577193439,
        0.13416408,
        1,
        1,
        1,
        -0.1875924851,
        0.5773502685,
        0.7946544702,
        0,
        0,
        0.3000000119,
        1,
        1,
        1,
        -0.607062024,
        0,
        0.7946544526,
        -0.2170820385,
        0.1577193439,
        0.13416408,
        1,
        1,
        1,
        -0.607062024,
        0,
        0.7946544526,
        -0.2170820385,
        -0.1577193439,
        0.13416408,
        1,
        1,
        1,
        -0.607062024,
        0,
        0.7946544526,
        0,
        0,
        0.3000000119,
        1,
        1,
        1,
        -0.1875924851,
        -0.5773502685,
        0.7946544702,
        -0.2170820385,
        -0.1577193439,
        0.13416408,
        1,
        1,
        1,
        -0.1875924851,
        -0.5773502685,
        0.7946544702,
        0.0829179659,
        -0.25519526,
        0.13416408,
        1,
        1,
        1,
        -0.1875924851,
        -0.5773502685,
        0.7946544702,
        0,
        0,
        0.3000000119,
        1,
        1,
        1,
        0.4911234949,
        -0.3568220761,
        0.794654465,
        0.0829179659,
        -0.25519526,
        0.13416408,
        1,
        1,
        1,
        0.4911234949,
        -0.3568220761,
        0.794654465,
        0.26832816,
        0,
        0.13416408,
        1,
        1,
        1,
        0.4911234949,
        -0.3568220761,
        0.794654465,
        0.26832816,
        0,
        0.13416408,
        1,
        1,
        1,
        0.7946544968,
        -0.5773502395,
        0.1875924616,
        0.0829179659,
        -0.25519526,
        0.13416408,
        1,
        1,
        1,
        0.7946544968,
        -0.5773502395,
        0.1875924616,
        0.2170820385,
        -0.1577193439,
        -0.13416408,
        1,
        1,
        1,
        0.7946544968,
        -0.5773502395,
        0.1875924616,
        0.26832816,
        0,
        0.13416408,
        1,
        1,
        1,
        0.7946544968,
        0.5773502395,
        0.1875924616,
        0.2170820385,
        0.1577193439,
        -0.13416408,
        1,
        1,
        1,
        0.7946544968,
        0.5773502395,
        0.1875924616,
        0.0829179659,
        0.25519526,
        0.13416408,
        1,
        1,
        1,
        0.7946544968,
        0.5773502395,
        0.1875924616,
        0.26832816,
        0,
        0.13416408,
        1,
        1,
        1,
        0.9822469443,
        0,
        -0.1875924848,
        0.2170820385,
        -0.1577193439,
        -0.13416408,
        1,
        1,
        1,
        0.9822469443,
        0,
        -0.1875924848,
        0.2170820385,
        0.1577193439,
        -0.13416408,
        1,
        1,
        1,
        0.9822469443,
        0,
        -0.1875924848,
        0.0829179659,
        0.25519526,
        0.13416408,
        1,
        1,
        1,
        0.3035310144,
        0.9341723501,
        -0.1875924935,
        0.2170820385,
        0.1577193439,
        -0.13416408,
        1,
        1,
        1,
        0.3035310144,
        0.9341723501,
        -0.1875924935,
        -0.0829179659,
        0.25519526,
        -0.13416408,
        1,
        1,
        1,
        0.3035310144,
        0.9341723501,
        -0.1875924935,
        0.0829179659,
        0.25519526,
        0.13416408,
        1,
        1,
        1,
        -0.3035310144,
        0.9341723501,
        0.1875924935,
        -0.0829179659,
        0.25519526,
        -0.13416408,
        1,
        1,
        1,
        -0.3035310144,
        0.9341723501,
        0.1875924935,
        -0.2170820385,
        0.1577193439,
        0.13416408,
        1,
        1,
        1,
        -0.3035310144,
        0.9341723501,
        0.1875924935,
        -0.2170820385,
        0.1577193439,
        0.13416408,
        1,
        1,
        1,
        -0.7946544968,
        0.5773502395,
        -0.1875924616,
        -0.0829179659,
        0.25519526,
        -0.13416408,
        1,
        1,
        1,
        -0.7946544968,
        0.5773502395,
        -0.1875924616,
        -0.26832816,
        0,
        -0.13416408,
        1,
        1,
        1,
        -0.7946544968,
        0.5773502395,
        -0.1875924616,
        -0.2170820385,
        0.1577193439,
        0.13416408,
        1,
        1,
        1,
        -0.9822469443,
        0,
        0.1875924848,
        -0.26832816,
        0,
        -0.13416408,
        1,
        1,
        1,
        -0.9822469443,
        0,
        0.1875924848,
        -0.2170820385,
        -0.1577193439,
        0.13416408,
        1,
        1,
        1,
        -0.9822469443,
        0,
        0.1875924848,
        -0.2170820385,
        -0.1577193439,
        0.13416408,
        1,
        1,
        1,
        -0.7946544968,
        -0.5773502395,
        -0.1875924616,
        -0.26832816,
        0,
        -0.13416408,
        1,
        1,
        1,
        -0.7946544968,
        -0.5773502395,
        -0.1875924616,
        -0.0829179659,
        -0.25519526,
        -0.13416408,
        1,
        1,
        1,
        -0.7946544968,
        -0.5773502395,
        -0.1875924616,
        -0.2170820385,
        -0.1577193439,
        0.13416408,
        1,
        1,
        1,
        -0.3035310144,
        -0.9341723501,
        0.1875924935,
        -0.0829179659,
        -0.25519526,
        -0.13416408,
        1,
        1,
        1,
        -0.3035310144,
        -0.9341723501,
        0.1875924935,
        0.0829179659,
        -0.25519526,
        0.13416408,
        1,
        1,
        1,
        -0.3035310144,
        -0.9341723501,
        0.1875924935,
        0.0829179659,
        -0.25519526,
        0.13416408,
        1,
        1,
        1,
        0.3035310144,
        -0.9341723501,
        -0.1875924935,
        -0.0829179659,
        -0.25519526,
        -0.13416408,
        1,
        1,
        1,
        0.3035310144,
        -0.9341723501,
        -0.1875924935,
        0.2170820385,
        -0.1577193439,
        -0.13416408,
        1,
        1,
        1,
        0.3035310144,
        -0.9341723501,
        -0.1875924935,
        0.2170820385,
        0.1577193439,
        -0.13416408,
        1,
        1,
        1,
        0.607062024,
        0,
        -0.7946544526,
        0.2170820385,
        -0.1577193439,
        -0.13416408,
        1,
        1,
        1,
        0.607062024,
        0,
        -0.7946544526,
        0,
        0,
        -0.3000000119,
        1,
        1,
        1,
        0.607062024,
        0,
        -0.7946544526,
        0.2170820385,
        0.1577193439,
        -0.13416408,
        1,
        1,
        1,
        0.1875924851,
        0.5773502685,
        -0.7946544702,
        0,
        0,
        -0.3000000119,
        1,
        1,
        1,
        0.1875924851,
        0.5773502685,
        -0.7946544702,
        -0.0829179659,
        0.25519526,
        -0.13416408,
        1,
        1,
        1,
        0.1875924851,
        0.5773502685,
        -0.7946544702,
        -0.0829179659,
        0.25519526,
        -0.13416408,
        1,
        1,
        1,
        -0.4911234949,
        0.3568220761,
        -0.794654465,
        0,
        0,
        -0.3000000119,
        1,
        1,
        1,
        -0.4911234949,
        0.3568220761,
        -0.794654465,
        -0.26832816,
        0,
        -0.13416408,
        1,
        1,
        1,
        -0.4911234949,
        0.3568220761,
        -0.794654465,
        -0.26832816,
        0,
        -0.13416408,
        1,
        1,
        1,
        -0.4911234949,
        -0.3568220761,
        -0.794654465,
        0,
        0,
        -0.3000000119,
        1,
        1,
        1,
        -0.4911234949,
        -0.3568220761,
        -0.794654465,
        -0.0829179659,
        -0.25519526,
        -0.13416408,
        1,
        1,
        1,
        -0.4911234949,
        -0.3568220761,
        -0.794654465,
        -0.0829179659,
        -0.25519526,
        -0.13416408,
        1,
        1,
        1,
        0.1875924851,
        -0.5773502685,
        -0.7946544702,
        0,
        0,
        -0.3000000119,
        1,
        1,
        1,
        0.1875924851,
        -0.5773502685,
        -0.7946544702,
        0.2170820385,
        -0.1577193439,
        -0.13416408,
        1,
        1,
        1,
        0.1875924851,
        -0.5773502685,
        -0.7946544702,
    ]

    icosa_indices = [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        52,
        53,
        54,
        55,
        56,
        57,
        58,
        59,
    ]

    icosa_vertices = np.array(icosa_vertices, dtype=np.float32)
    icosa_indices = np.array(icosa_indices, dtype=np.uint32)

    # Scale icosahedron size
    icosa_vertices[0::9] *= radius
    icosa_vertices[1::9] *= radius
    icosa_vertices[2::9] *= radius

    # Translate icosahedron to center
    icosa_vertices[0::9] += center[0]
    icosa_vertices[1::9] += center[1]
    icosa_vertices[2::9] += center[2]

    return icosa_vertices, icosa_indices


def get_city_model(sub_x=None, sub_y=None):

    mesh = meshes.load_mesh("../data/models/CitySurface.obj")

    if sub_x is not None and sub_y is not None:
        mesh = get_sub_mesh(sub_x, sub_y, mesh)

    print("Face count: " + str(len(mesh.faces)))
    print("Vertex count: " + str(len(mesh.vertices)))

    array_length = len(mesh.faces) * 3 * 9
    new_vertices = np.zeros(array_length)
    face_verts = mesh.vertices[mesh.faces.flatten()]
    c1 = face_verts[:-1]
    c2 = face_verts[1:]
    mask = np.ones(len(c1), dtype=bool)
    mask[2::3] = False  # [True, True, False, True, True, False, ...]
    cross_vecs = (c2 - c1)[mask]  # (v2 - v1), (v3 - v2)
    cross_p = np.cross(cross_vecs[::2], cross_vecs[1::2])  # (v2 - v1) x (v3 - v2)
    cross_p = cross_p / np.linalg.norm(cross_p, axis=1)[:, np.newaxis]  # normalize
    vertex_mask = np.array([1, 1, 1, 0, 0, 0, 0, 0, 0], dtype=bool)
    color_mask = np.array([0, 0, 0, 1, 1, 1, 0, 0, 0], dtype=bool)
    normal_mask = np.array([0, 0, 0, 0, 0, 0, 1, 1, 1], dtype=bool)
    mask = np.tile(vertex_mask, array_length // len(vertex_mask) + 1)[:array_length]
    new_vertices[mask] = face_verts.flatten()
    mask = np.tile(color_mask, array_length // len(color_mask) + 1)[:array_length]
    new_vertices[mask] = np.array([1.0, 0.0, 1.0] * len(mesh.faces) * 3).flatten()
    mask = np.tile(normal_mask, array_length // len(normal_mask) + 1)[:array_length]
    new_vertices[mask] = np.tile(cross_p, 3).flatten()
    new_faces = np.arange(array_length // 9)

    vertices = np.array(new_vertices, dtype="float32").flatten()
    indices = np.array(new_faces, dtype="uint32").flatten()

    return vertices, indices
